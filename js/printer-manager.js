// –ú–µ–Ω–µ–¥–∂–µ—Ä —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–∏—Å –ø—Ä–∏–Ω—Ç–µ—Ä–∞–º–∏
const PrinterManager = {
    // –°–ø–∏—Å–æ–∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ (TM01-TM48) - –±—É–¥–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –≤ init()
    restaurants: [],
    
    // –°–ø–∏—Å–æ–∫ —Ü–µ—Ö–æ–≤
    departments: [
        { id: 15, name: '–ü–∏—Ü—Ü–∞' },
        { id: 16, name: '–ö–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫–∏–π' },
        { id: 17, name: '–•–æ–ª–æ–¥–Ω—ã–π' },
        { id: 18, name: '–ì–æ—Ä—è—á–∏–π' },
        { id: 19, name: '–ë–∞—Ä' }
    ],

    // –¢–µ–∫—É—â–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    selectedRestaurant: null,
    selectedDepartment: null,
    selectedPrinter: null,

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    init: function() {
        console.log('üîÑ PrinterManager: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...');
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        this.restaurants = this.generateRestaurants(48);
        console.log('‚úÖ PrinterManager: —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã');
    },

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤
    generateRestaurants: function(count) {
        const restaurants = [];
        for (let i = 1; i <= count; i++) {
            restaurants.push({
                id: i,
                displayName: `TM${i}`,
                network: `10.0.${i}`
            });
            
            // –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏ –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
            if (i % 10 === 0 && i < count) {
                restaurants.push('');
            }
        }
        return restaurants;
    },

    // –ú–µ—Ç–æ–¥ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å navigation.js
    initialize: function() {
        console.log('üîÑ PrinterManager: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤...');
        this.initializeRestaurantsList();
    },

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤
    initializeRestaurantsList: function() {
        const listContainer = document.getElementById('printersList');
        if (!listContainer) {
            console.error('‚ùå PrinterManager: –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä printersList –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }

        listContainer.innerHTML = '';

        this.restaurants.forEach((restaurant, index) => {
            if (restaurant === '') {
                // –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
                const separator = document.createElement('div');
                separator.className = 'printer-separator';
                separator.innerHTML = '<div class="separator-line"></div>';
                listContainer.appendChild(separator);
            } else {
                // –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω
                const restaurantItem = document.createElement('div');
                restaurantItem.className = 'server-item printer-item';
                
                restaurantItem.innerHTML = `
                    <div class="server-name printer-name-centered">
                        <span class="printer-address">${restaurant.displayName}</span>
                    </div>
                `;
                restaurantItem.addEventListener('click', () => this.selectRestaurant(restaurant));
                listContainer.appendChild(restaurantItem);
            }
        });

        console.log(`‚úÖ PrinterManager: –∑–∞–≥—Ä—É–∂–µ–Ω–æ ${this.restaurants.filter(item => item !== '').length} —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤`);
    },

    // –í—ã–±–æ—Ä —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
    selectRestaurant: function(restaurant) {
        this.selectedRestaurant = restaurant;
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω –≤ sessionStorage
        sessionStorage.setItem('selectedRestaurant', JSON.stringify(restaurant));
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—ã–±–æ—Ä–∞ —Ü–µ—Ö–∞
        Navigation.showPage('printer-departments');
    },

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤—ã–±–æ—Ä–∞ —Ü–µ—Ö–∞
    loadDepartmentsPage: function() {
        const restaurantData = sessionStorage.getItem('selectedRestaurant');
        if (!restaurantData) {
            Navigation.showPage('service-printers');
            return;
        }

        this.selectedRestaurant = JSON.parse(restaurantData);

        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        const titleElement = document.getElementById('departmentsTitle');
        if (titleElement) {
            titleElement.textContent = `–í—ã–±–æ—Ä —Ü–µ—Ö–∞ - ${this.selectedRestaurant.displayName}`;
        }
    },

    // –í—ã–±–æ—Ä —Ü–µ—Ö–∞
    selectDepartment: function(department) {
        this.selectedDepartment = department;
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π IP –ø—Ä–∏–Ω—Ç–µ—Ä–∞
        const printerIp = `${this.selectedRestaurant.network}.${department.id}`;
        const printerName = `${this.selectedRestaurant.displayName} ${department.name}`;
        
        this.selectedPrinter = {
            ip: printerIp,
            name: printerName,
            restaurant: this.selectedRestaurant.displayName,
            department: department.name
        };
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–∏–Ω—Ç–µ—Ä –≤ sessionStorage
        sessionStorage.setItem('selectedPrinter', JSON.stringify(this.selectedPrinter));
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–µ—Ç–∞–ª–µ–π –ø—Ä–∏–Ω—Ç–µ—Ä–∞
        Navigation.showPage('printer-details');
    },

    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–µ—Ç–∞–ª–µ–π –ø—Ä–∏–Ω—Ç–µ—Ä–∞
    loadPrinterDetails: function() {
        const printerData = sessionStorage.getItem('selectedPrinter');
        if (!printerData) {
            Navigation.showPage('service-printers');
            return;
        }

        this.selectedPrinter = JSON.parse(printerData);

        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        document.getElementById('selectedPrinterName').textContent = this.selectedPrinter.name;
        document.getElementById('selectedPrinterIp').textContent = this.selectedPrinter.ip;

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–Ω—Ç–µ—Ä–∞
        this.checkPrinterStatus(this.selectedPrinter.ip);
    },

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–∏–Ω—Ç–µ—Ä–∞
    checkPrinterStatus: function(printerIp) {
        const statusElement = document.getElementById('printerStatus');
        if (!statusElement) return;
        
        // –ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
        statusElement.innerHTML = '<i class="fas fa-sync fa-spin"></i> –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞...';
        
        setTimeout(() => {
            // –°–ª—É—á–∞–π–Ω—ã–π —Å—Ç–∞—Ç—É—Å –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
            const isOnline = Math.random() > 0.3;
            if (isOnline) {
                statusElement.innerHTML = '<i class="fas fa-check-circle" style="color: #4CAF50"></i> –°—Ç–∞—Ç—É—Å: ONLINE';
                statusElement.className = 'printer-status online';
            } else {
                statusElement.innerHTML = '<i class="fas fa-times-circle" style="color: #f44336"></i> –°—Ç–∞—Ç—É—Å: OFFLINE';
                statusElement.className = 'printer-status offline';
            }
        }, 1500);
    },

    // –ö–æ–º–∞–Ω–¥–∞ PING
    pingPrinter: function() {
        if (!this.selectedPrinter) return;

        this.addToLog(`üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ PING –Ω–∞ ${this.selectedPrinter.ip}...`);
        
        // –ò–º–∏—Ç–∞—Ü–∏—è PING –∑–∞–ø—Ä–æ—Å–∞
        setTimeout(() => {
            const success = Math.random() > 0.2;
            if (success) {
                this.addToLog(`‚úÖ PING —É—Å–ø–µ—à–µ–Ω! ${this.selectedPrinter.ip} –æ—Ç–≤–µ—á–∞–µ—Ç`, 'success');
            } else {
                this.addToLog(`‚ùå PING –Ω–µ—É–¥–∞—á–µ–Ω! ${this.selectedPrinter.ip} –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç`, 'error');
            }
        }, 2000);
    },

    // –ö–æ–º–∞–Ω–¥–∞ RESTART
    restartPrinter: function() {
        if (!this.selectedPrinter) return;

        // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
        if (confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–∏–Ω—Ç–µ—Ä ${this.selectedPrinter.name} (${this.selectedPrinter.ip})?`)) {
            this.addToLog(`üîÑ –ó–∞–ø—É—Å–∫ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ ${this.selectedPrinter.ip}...`);
            
            // –ò–º–∏—Ç–∞—Ü–∏—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
            setTimeout(() => {
                this.addToLog(`‚úÖ –ö–æ–º–∞–Ω–¥–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ ${this.selectedPrinter.ip}`, 'success');
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ "–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏"
                setTimeout(() => {
                    this.checkPrinterStatus(this.selectedPrinter.ip);
                }, 3000);
            }, 1500);
        }
    },

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ª–æ–≥
    addToLog: function(message, type = 'info') {
        const logElement = document.getElementById('actionLog');
        if (!logElement) return;

        const logEntry = document.createElement('div');
        logEntry.className = `log-entry log-${type}`;
        
        const timestamp = new Date().toLocaleTimeString();
        logEntry.innerHTML = `<span class="log-time">[${timestamp}]</span> ${message}`;
        
        logElement.appendChild(logEntry);
        logElement.scrollTop = logElement.scrollHeight;
    }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PrinterManager –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', function() {
    if (typeof PrinterManager !== 'undefined' && PrinterManager.init) {
        PrinterManager.init();
    }
});
