// –ú–µ–Ω–µ–¥–∂–µ—Ä —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Å—Å–æ–≤—ã–º–∏ —Å–µ—Ä–≤–µ—Ä–∞–º–∏
const CashServerManager = {
    // –°–ø–∏—Å–æ–∫ –∫–∞—Å—Å–æ–≤—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤
    servers: [
        "rk01-active", "rk02-active", "rk03-active", "rk04-active", "rk05-active",
        "rk06-active", "rk07-active", "rk08-active", "rk09-active", "rk10-active",
        "rk11-active", "rk12-active", "rk13-active", "rk14-active", "rk15-active",
        "rk15p-active", "rk16-active", "rk17-active", "rk18-active", "rk19-active",
        "rk20-active", "rk21-active", "rk22-active", "rk23-active", "rk24-active",
        "rk25-active", "rk26-active", "rk27-active", "rk28-active", "rk29-active",
        "rk30-active", "rk31-active", "rk32-active", "rk33-active", "rk34-active",
        "rk35-active", "rk36-active", "rk37-active", "rk38-active", "rk39-active",
        "rk40-active", "rk41-active", "rk42-active", "rk43-active", "rk44-active",
        "rk45-active", "rk46-active", "rk47-active", "rk48-active", "sk-test"
    ],

    // –°–ø–∏—Å–æ–∫ —Å–ª—É–∂–±
    services: [
        { id: 'midserv', name: 'MidServ', displayName: 'MidServ' },
        { id: 'winprint', name: 'WinPrint', displayName: 'WinPrint' },
        { id: 'farcards_egais', name: 'Farcards EGAIS', displayName: 'Farcards EGAIS' },
        { id: 'farcards', name: 'FarCards', displayName: 'FarCards' },
        { id: 'qrpay', name: 'QRpay', displayName: 'QRpay' }
    ],

    // –¢–µ–∫—É—â–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
    selectedServer: null,

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    init: function() {
        console.log('üîÑ CashServerManager: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...');
    },

    // –ú–µ—Ç–æ–¥ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å navigation.js
    initialize: function() {
        console.log('üîÑ CashServerManager: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤...');
        this.initializeServersList();
    },

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤
    initializeServersList: function() {
        const listContainer = document.getElementById('cashServersList');
        if (!listContainer) {
            console.error('‚ùå CashServerManager: –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä cashServersList –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }

        listContainer.innerHTML = '';

        this.servers.forEach((server, index) => {
            const serverItem = document.createElement('div');
            serverItem.className = 'server-item cash-server-item';
            
            serverItem.innerHTML = `
                <div class="server-name cash-server-name-centered">
                    <span class="server-address">${server}</span>
                </div>
            `;
            serverItem.addEventListener('click', () => this.selectServer(server));
            listContainer.appendChild(serverItem);
        });

        console.log(`‚úÖ CashServerManager: –∑–∞–≥—Ä—É–∂–µ–Ω–æ ${this.servers.length} —Å–µ—Ä–≤–µ—Ä–æ–≤`);
    },

    // –í—ã–±–æ—Ä —Å–µ—Ä–≤–µ—Ä–∞
    selectServer: function(serverName) {
        this.selectedServer = serverName;
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –≤ sessionStorage
        sessionStorage.setItem('selectedCashServer', serverName);
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–º
        Navigation.showPage('cash-server-management');
    },

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–º
    loadServerManagementPage: function() {
        const serverName = sessionStorage.getItem('selectedCashServer');
        if (!serverName) {
            Navigation.showPage('cash-servers');
            return;
        }

        this.selectedServer = serverName;

        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        const titleElement = document.getElementById('serverManagementTitle');
        if (titleElement) {
            titleElement.textContent = `–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–æ–º: ${serverName}`;
        }
    },

    // –û—Ç–∫—Ä—ã—Ç–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–ª—É–∂–±
    openServicesPage: function() {
        Navigation.showPage('cash-server-services');
    },

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–ª—É–∂–±
    loadServicesPage: function() {
        const serverName = sessionStorage.getItem('selectedCashServer');
        if (!serverName) {
            Navigation.showPage('cash-server-management');
            return;
        }

        this.selectedServer = serverName;

        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        const titleElement = document.getElementById('servicesTitle');
        if (titleElement) {
            titleElement.textContent = `–°–ª—É–∂–±—ã —Å–µ—Ä–≤–µ—Ä–∞: ${serverName}`;
        }
    },

    // –í—ã–±–æ—Ä —Å–ª—É–∂–±—ã
    selectService: function(service) {
        this.selectedService = service;
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å–ª—É–∂–±—É –≤ sessionStorage
        sessionStorage.setItem('selectedService', JSON.stringify(service));
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ª—É–∂–±–æ–π
        Navigation.showPage('service-management');
    },

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ª—É–∂–±–æ–π
    loadServiceManagementPage: function() {
        const serverName = sessionStorage.getItem('selectedCashServer');
        const serviceData = sessionStorage.getItem('selectedService');
        
        if (!serverName || !serviceData) {
            Navigation.showPage('cash-server-services');
            return;
        }

        this.selectedServer = serverName;
        this.selectedService = JSON.parse(serviceData);

        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        const titleElement = document.getElementById('serviceManagementTitle');
        if (titleElement) {
            titleElement.textContent = `${this.selectedService.displayName} - ${serverName}`;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–ª—É–∂–±—ã
        this.checkServiceStatus();
    },

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–ª—É–∂–±—ã
    checkServiceStatus: function() {
        const statusElement = document.getElementById('serviceStatus');
        if (!statusElement) return;
        
        // –ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
        statusElement.innerHTML = '<i class="fas fa-sync fa-spin"></i> –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞...';
        
        setTimeout(() => {
            // –°–ª—É—á–∞–π–Ω—ã–π —Å—Ç–∞—Ç—É—Å –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
            const statuses = ['Running', 'Stopped', 'Paused', 'Starting'];
            const randomStatus = statuses[Math.floor(Math.random() * statuses.length)];
            
            let statusIcon = 'fa-question-circle';
            let statusColor = '#ff9800';
            
            switch(randomStatus) {
                case 'Running':
                    statusIcon = 'fa-check-circle';
                    statusColor = '#4CAF50';
                    break;
                case 'Stopped':
                    statusIcon = 'fa-times-circle';
                    statusColor = '#f44336';
                    break;
                case 'Paused':
                    statusIcon = 'fa-pause-circle';
                    statusColor = '#ff9800';
                    break;
                case 'Starting':
                    statusIcon = 'fa-play-circle';
                    statusColor = '#2196F3';
                    break;
            }
            
            statusElement.innerHTML = `<i class="fas ${statusIcon}" style="color: ${statusColor}"></i> –°—Ç–∞—Ç—É—Å: ${randomStatus}`;
            statusElement.className = 'service-status';
        }, 1500);
    },

    // –ö–æ–º–∞–Ω–¥–∞ RESTART –¥–ª—è —Å–ª—É–∂–±—ã
    restartService: function() {
        if (!this.selectedService) return;

        this.addToServiceLog(`üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–ª—É–∂–±—ã ${this.selectedService.displayName}...`);
        
        // –ò–º–∏—Ç–∞—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–ª—É–∂–±—ã
        setTimeout(() => {
            this.addToServiceLog(`‚úÖ –°–ª—É–∂–±–∞ ${this.selectedService.displayName} –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞`, 'success');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
            setTimeout(() => {
                this.checkServiceStatus();
            }, 1000);
        }, 2000);
    },

    // –ö–æ–º–∞–Ω–¥–∞ START –¥–ª—è —Å–ª—É–∂–±—ã
    startService: function() {
        if (!this.selectedService) return;

        this.addToServiceLog(`üîÑ –ó–∞–ø—É—Å–∫ —Å–ª—É–∂–±—ã ${this.selectedService.displayName}...`);
        
        // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–ª—É–∂–±—ã
        setTimeout(() => {
            this.addToServiceLog(`‚úÖ –°–ª—É–∂–±–∞ ${this.selectedService.displayName} –∑–∞–ø—É—â–µ–Ω–∞`, 'success');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞
            setTimeout(() => {
                this.checkServiceStatus();
            }, 1000);
        }, 2000);
    },

    // –ö–æ–º–∞–Ω–¥–∞ STOP –¥–ª—è —Å–ª—É–∂–±—ã
    stopService: function() {
        if (!this.selectedService) return;

        this.addToServiceLog(`üîÑ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª—É–∂–±—ã ${this.selectedService.displayName}...`);
        
        // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–ª—É–∂–±—ã
        setTimeout(() => {
            this.addToServiceLog(`‚úÖ –°–ª—É–∂–±–∞ ${this.selectedService.displayName} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞`, 'success');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
            setTimeout(() => {
                this.checkServiceStatus();
            }, 1000);
        }, 2000);
    },

    // –ö–æ–º–∞–Ω–¥–∞ STATUS –¥–ª—è —Å–ª—É–∂–±—ã
    checkServiceStatusAction: function() {
        if (!this.selectedService) return;

        this.addToServiceLog(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–ª—É–∂–±—ã ${this.selectedService.displayName}...`);
        this.checkServiceStatus();
    },

    // –û—Ç–∫—Ä—ã—Ç–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö —Å–ª—É–∂–±
    openServicesStatusPage: function() {
        Navigation.showPage('services-status');
    },

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö —Å–ª—É–∂–±
    loadServicesStatusPage: function() {
        const serverName = sessionStorage.getItem('selectedCashServer');
        if (!serverName) {
            Navigation.showPage('cash-server-management');
            return;
        }

        this.selectedServer = serverName;

        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        const titleElement = document.getElementById('servicesStatusTitle');
        if (titleElement) {
            titleElement.textContent = `–°—Ç–∞—Ç—É—Å —Å–ª—É–∂–± —Å–µ—Ä–≤–µ—Ä–∞: ${serverName}`;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–ª—É–∂–±
        this.checkAllServicesStatus();
    },

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö —Å–ª—É–∂–±
    checkAllServicesStatus: function() {
        const statusContainer = document.getElementById('allServicesStatus');
        if (!statusContainer) return;
        
        // –ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö —Å–ª—É–∂–±
        statusContainer.innerHTML = '<div class="loading-status"><i class="fas fa-sync fa-spin"></i> –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–ª—É–∂–±...</div>';
        
        setTimeout(() => {
            let statusHTML = '';
            
            this.services.forEach(service => {
                // –°–ª—É—á–∞–π–Ω—ã–π —Å—Ç–∞—Ç—É—Å –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
                const statuses = ['Running', 'Stopped', 'Paused'];
                const randomStatus = statuses[Math.floor(Math.random() * statuses.length)];
                
                let statusIcon = 'fa-question-circle';
                let statusColor = '#ff9800';
                
                switch(randomStatus) {
                    case 'Running':
                        statusIcon = 'fa-check-circle';
                        statusColor = '#4CAF50';
                        break;
                    case 'Stopped':
                        statusIcon = 'fa-times-circle';
                        statusColor = '#f44336';
                        break;
                    case 'Paused':
                        statusIcon = 'fa-pause-circle';
                        statusColor = '#ff9800';
                        break;
                }
                
                statusHTML += `
                    <div class="service-status-item">
                        <div class="service-status-name">${service.displayName}</div>
                        <div class="service-status-value" style="color: ${statusColor}">
                            <i class="fas ${statusIcon}"></i> ${randomStatus}
                        </div>
                    </div>
                `;
            });
            
            statusContainer.innerHTML = statusHTML;
        }, 2000);
    },

    // –ö–æ–º–∞–Ω–¥–∞ PING –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞
    pingServer: function() {
        if (!this.selectedServer) return;

        this.addToLog(`üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ PING –Ω–∞ ${this.selectedServer}...`);
        
        // –ò–º–∏—Ç–∞—Ü–∏—è PING –∑–∞–ø—Ä–æ—Å–∞
        setTimeout(() => {
            const success = Math.random() > 0.2;
            if (success) {
                this.addToLog(`‚úÖ PING —É—Å–ø–µ—à–µ–Ω! ${this.selectedServer} –æ—Ç–≤–µ—á–∞–µ—Ç`, 'success');
            } else {
                this.addToLog(`‚ùå PING –Ω–µ—É–¥–∞—á–µ–Ω! ${this.selectedServer} –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç`, 'error');
            }
        }, 2000);
    },

    // –ö–æ–º–∞–Ω–¥–∞ RESTART –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞
    restartServer: function() {
        if (!this.selectedServer) return;

        // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
        if (confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–µ—Ä–≤–µ—Ä ${this.selectedServer}?`)) {
            this.addToLog(`üîÑ –ó–∞–ø—É—Å–∫ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ ${this.selectedServer}...`);
            
            // –ò–º–∏—Ç–∞—Ü–∏—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
            setTimeout(() => {
                this.addToLog(`‚úÖ –ö–æ–º–∞–Ω–¥–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ ${this.selectedServer}`, 'success');
            }, 1500);
        }
    },

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ª–æ–≥ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–º
    addToLog: function(message, type = 'info') {
        const logElement = document.getElementById('serverActionLog');
        if (!logElement) return;

        const logEntry = document.createElement('div');
        logEntry.className = `log-entry log-${type}`;
        
        const timestamp = new Date().toLocaleTimeString();
        logEntry.innerHTML = `<span class="log-time">[${timestamp}]</span> ${message}`;
        
        logElement.appendChild(logEntry);
        logElement.scrollTop = logElement.scrollHeight;
    },

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ª–æ–≥ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ª—É–∂–±–æ–π
    addToServiceLog: function(message, type = 'info') {
        const logElement = document.getElementById('serviceActionLog');
        if (!logElement) return;

        const logEntry = document.createElement('div');
        logEntry.className = `log-entry log-${type}`;
        
        const timestamp = new Date().toLocaleTimeString();
        logEntry.innerHTML = `<span class="log-time">[${timestamp}]</span> ${message}`;
        
        logElement.appendChild(logEntry);
        logElement.scrollTop = logElement.scrollHeight;
    }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è CashServerManager –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', function() {
    if (typeof CashServerManager !== 'undefined' && CashServerManager.init) {
        CashServerManager.init();
    }
});