// –ú–µ–Ω–µ–¥–∂–µ—Ä —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ª—É–∂–±–∞–º–∏ RkDexch –∏ CRM
const ServicesManager = {
    // –°–ª—É–∂–±—ã CRM
    crmServices: [
        { id: 'authservice', name: 'AuthService', displayName: 'AuthService' },
        { id: 'monitor_r_keeper', name: 'Monitor_r_keeper', displayName: 'Monitor_r_keeper' }
    ],

    // –¢–µ–∫—É—â–∞—è –≤—ã–±—Ä–∞–Ω–Ω–∞—è —Å–ª—É–∂–±–∞
    selectedService: null,

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    init: function() {
        console.log('üîÑ ServicesManager: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...');
    },

    // –í—ã–±–æ—Ä –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
    selectService: function(serviceName, serviceDisplayName) {
        if (serviceName === 'crm') {
            // –î–ª—è CRM –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ —Å–ø–∏—Å–∫–æ–º —Å–ª—É–∂–±
            Navigation.showPage('crm-services');
            return;
        }
        
        this.selectedService = {
            name: serviceName,
            displayName: serviceDisplayName
        };
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å–ª—É–∂–±—É –≤ sessionStorage
        sessionStorage.setItem('selectedService', JSON.stringify(this.selectedService));
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ª—É–∂–±–æ–π
        Navigation.showPage('service-management-global');
    },

    // –í—ã–±–æ—Ä —Å–ª—É–∂–±—ã CRM
    selectCrmService: function(service) {
        this.selectedService = service;
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å–ª—É–∂–±—É –≤ sessionStorage
        sessionStorage.setItem('selectedService', JSON.stringify(this.selectedService));
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ª—É–∂–±–æ–π
        Navigation.showPage('service-management-global');
    },

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–ª—É–∂–± CRM
    loadCrmServicesPage: function() {
        // –ù–∏—á–µ–≥–æ –æ—Å–æ–±–µ–Ω–Ω–æ–≥–æ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è, –ø—Ä–æ—Å—Ç–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–ø–∏—Å–æ–∫
        console.log('üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–ª—É–∂–± CRM...');
    },

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ª—É–∂–±–æ–π
    loadServiceManagementPage: function() {
        const serviceData = sessionStorage.getItem('selectedService');
        
        if (!serviceData) {
            Navigation.showPage('services');
            return;
        }

        this.selectedService = JSON.parse(serviceData);

        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        const titleElement = document.getElementById('globalServiceManagementTitle');
        if (titleElement) {
            titleElement.textContent = `–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª—É–∂–±–æ–π: ${this.selectedService.displayName}`;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–ª—É–∂–±—ã
        this.checkServiceStatus();
    },

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–ª—É–∂–±—ã
    checkServiceStatus: function() {
        const statusElement = document.getElementById('globalServiceStatus');
        if (!statusElement) return;
        
        // –ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
        statusElement.innerHTML = '<i class="fas fa-sync fa-spin"></i> –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞...';
        
        setTimeout(() => {
            // –°–ª—É—á–∞–π–Ω—ã–π —Å—Ç–∞—Ç—É—Å –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
            const statuses = ['Running', 'Stopped', 'Paused', 'Starting'];
            const randomStatus = statuses[Math.floor(Math.random() * statuses.length)];
            
            let statusIcon = 'fa-question-circle';
            let statusColor = '#ff9800';
            
            switch(randomStatus) {
                case 'Running':
                    statusIcon = 'fa-check-circle';
                    statusColor = '#4CAF50';
                    break;
                case 'Stopped':
                    statusIcon = 'fa-times-circle';
                    statusColor = '#f44336';
                    break;
                case 'Paused':
                    statusIcon = 'fa-pause-circle';
                    statusColor = '#ff9800';
                    break;
                case 'Starting':
                    statusIcon = 'fa-play-circle';
                    statusColor = '#2196F3';
                    break;
            }
            
            statusElement.innerHTML = `<i class="fas ${statusIcon}" style="color: ${statusColor}"></i> –°—Ç–∞—Ç—É—Å: ${randomStatus}`;
            statusElement.className = 'service-status';
        }, 1500);
    },

    // –ö–æ–º–∞–Ω–¥–∞ RESTART –¥–ª—è —Å–ª—É–∂–±—ã
    restartService: function() {
        if (!this.selectedService) return;

        this.addToServiceLog(`üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–ª—É–∂–±—ã ${this.selectedService.displayName}...`);
        
        // –ò–º–∏—Ç–∞—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–ª—É–∂–±—ã
        setTimeout(() => {
            this.addToServiceLog(`‚úÖ –°–ª—É–∂–±–∞ ${this.selectedService.displayName} –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞`, 'success');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
            setTimeout(() => {
                this.checkServiceStatus();
            }, 1000);
        }, 2000);
    },

    // –ö–æ–º–∞–Ω–¥–∞ START –¥–ª—è —Å–ª—É–∂–±—ã
    startService: function() {
        if (!this.selectedService) return;

        this.addToServiceLog(`üîÑ –ó–∞–ø—É—Å–∫ —Å–ª—É–∂–±—ã ${this.selectedService.displayName}...`);
        
        // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–ª—É–∂–±—ã
        setTimeout(() => {
            this.addToServiceLog(`‚úÖ –°–ª—É–∂–±–∞ ${this.selectedService.displayName} –∑–∞–ø—É—â–µ–Ω–∞`, 'success');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞
            setTimeout(() => {
                this.checkServiceStatus();
            }, 1000);
        }, 2000);
    },

    // –ö–æ–º–∞–Ω–¥–∞ STOP –¥–ª—è —Å–ª—É–∂–±—ã
    stopService: function() {
        if (!this.selectedService) return;

        this.addToServiceLog(`üîÑ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª—É–∂–±—ã ${this.selectedService.displayName}...`);
        
        // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–ª—É–∂–±—ã
        setTimeout(() => {
            this.addToServiceLog(`‚úÖ –°–ª—É–∂–±–∞ ${this.selectedService.displayName} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞`, 'success');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
            setTimeout(() => {
                this.checkServiceStatus();
            }, 1000);
        }, 2000);
    },

    // –ö–æ–º–∞–Ω–¥–∞ STATUS –¥–ª—è —Å–ª—É–∂–±—ã
    checkServiceStatusAction: function() {
        if (!this.selectedService) return;

        this.addToServiceLog(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–ª—É–∂–±—ã ${this.selectedService.displayName}...`);
        this.checkServiceStatus();
    },

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ª–æ–≥
    addToServiceLog: function(message, type = 'info') {
        const logElement = document.getElementById('globalServiceActionLog');
        if (!logElement) return;

        const logEntry = document.createElement('div');
        logEntry.className = `log-entry log-${type}`;
        
        const timestamp = new Date().toLocaleTimeString();
        logEntry.innerHTML = `<span class="log-time">[${timestamp}]</span> ${message}`;
        
        logElement.appendChild(logEntry);
        logElement.scrollTop = logElement.scrollHeight;
    }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ServicesManager –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', function() {
    if (typeof ServicesManager !== 'undefined' && ServicesManager.init) {
        ServicesManager.init();
    }
});