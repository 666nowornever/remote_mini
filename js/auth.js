// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
const Auth = {
    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è API
    API_CONFIG: {
        URL: 'https://wh.tomato-pizza.ru:443/webhook/hs/tomatohook/CheckingAccessRights',
        TOKEN: '6b852788-cc29-430f-94c8-bf45852b08c4'
    },

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    initialize: async function() {
        try {
            const tg = window.Telegram.WebApp;
            tg.ready();
            tg.expand();

            const user = tg.initDataUnsafe.user;
            
            if (!user) {
                this.showAccessDenied('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
                return false;
            }

            // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            console.log('=== –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï ===');
            console.log('User ID:', user.id);
            console.log('Username:', user.username);
            console.log('First name:', user.first_name);
            console.log('========================');

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ API
            const hasAccess = await this.checkAccess(user.id);
            
            if (hasAccess) {
                this.showApp();
                return true;
            } else {
                this.showAccessDenied('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω —Å–∏—Å—Ç–µ–º–æ–π', user);
                return false;
            }

        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
            this.showAccessDenied('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞');
            return false;
        }
    },

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ —á–µ—Ä–µ–∑ API
    checkAccess: async function(userId) {
        try {
            console.log('üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userId);
            
            const response = await fetch(this.API_CONFIG.URL, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'token': this.API_CONFIG.TOKEN
                },
                body: JSON.stringify({
                    id: userId
                })
            });

            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            const result = await response.json();
            console.log('üì° –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', result);

            return result.canUse === true;

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ—Å—Ç—É–ø–∞:', error);
            
            // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            // –∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É - –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            return false;
        }
    },

    // –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    showApp: function() {
        document.getElementById('app').classList.remove('hidden');
        document.getElementById('accessDenied').classList.add('hidden');
        console.log('‚úÖ –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω');
    },

    // –ü–æ–∫–∞–∑–∞—Ç—å —ç–∫—Ä–∞–Ω "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω"
    showAccessDenied: function(reason, user = null) {
        document.getElementById('app').classList.add('hidden');
        document.getElementById('accessDenied').classList.remove('hidden');
        
        const deniedUserInfo = document.getElementById('deniedUserInfo');
        
        if (user) {
            deniedUserInfo.innerHTML = `
                <strong>–í–∞—à ID:</strong> ${user.id}<br>
                <strong>–ò–º—è:</strong> ${user.first_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}<br>
                <strong>Username:</strong> @${user.username || '–ù–µ —É–∫–∞–∑–∞–Ω'}<br>
                <strong>–°—Ç–∞—Ç—É—Å:</strong> ‚ùå ${reason}
            `;
        } else {
            deniedUserInfo.innerHTML = `<strong>–ü—Ä–∏—á–∏–Ω–∞:</strong> ${reason}`;
        }
        
        console.warn('üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω:', reason, user);
    }
};
