// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
const Auth = {
    // –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ - –û–ë–ù–û–í–õ–ï–ù–ù–´–ô –°–ü–ò–°–û–ö
    ALLOWED_USER_IDS: [
        349807461,      // –î–æ–±–∞–≤–ª–µ–Ω –ø–µ—Ä–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        838646989,    // –î–æ–±–∞–≤–ª–µ–Ω –≤—Ç–æ—Ä–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    ],

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    initialize: function() {
        const tg = window.Telegram.WebApp;
        tg.ready();
        tg.expand();

        const user = tg.initDataUnsafe.user;
        
        if (!user) {
            this.showAccessDenied('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
            return false;
        }

        // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        console.log('=== –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï ===');
        console.log('User ID:', user.id);
        console.log('Username:', user.username);
        console.log('First name:', user.first_name);
        console.log('Language:', user.language_code);
        console.log('–†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ ID:', this.ALLOWED_USER_IDS);
        console.log('–î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω:', this.ALLOWED_USER_IDS.includes(user.id));
        console.log('========================');

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞
        if (this.ALLOWED_USER_IDS.includes(user.id)) {
            this.showApp();
            return true;
        } else {
            this.showAccessDenied(null, user);
            return false;
        }
    },

    // –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    showApp: function() {
        document.getElementById('app').classList.remove('hidden');
        document.getElementById('accessDenied').classList.add('hidden');
    },

    // –ü–æ–∫–∞–∑–∞—Ç—å —ç–∫—Ä–∞–Ω "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω"
    showAccessDenied: function(reason, user = null) {
        document.getElementById('app').classList.add('hidden');
        document.getElementById('accessDenied').classList.remove('hidden');
        
        const deniedUserInfo = document.getElementById('deniedUserInfo');
        
        if (user) {
            deniedUserInfo.innerHTML = `
                <strong>–í–∞—à ID:</strong> ${user.id}<br>
                <strong>–ò–º—è:</strong> ${user.first_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}<br>
                <strong>Username:</strong> @${user.username || '–ù–µ —É–∫–∞–∑–∞–Ω'}<br>
                <strong>–°—Ç–∞—Ç—É—Å:</strong> ‚ùå –ù–µ –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π<br>
                <strong>–†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ ID:</strong> ${this.ALLOWED_USER_IDS.join(', ')}
            `;
        } else {
            deniedUserInfo.innerHTML = `<strong>–ü—Ä–∏—á–∏–Ω–∞:</strong> ${reason}`;
        }
        
        console.warn('üö´ –ü–û–ü–´–¢–ö–ê –ù–ï–°–ê–ù–ö–¶–ò–û–ù–ò–†–û–í–ê–ù–ù–û–ì–û –î–û–°–¢–£–ü–ê:', user);
    },

    // –ú–µ—Ç–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–º–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å –∏–∑ –∫–æ–Ω—Å–æ–ª–∏)
    addUser: function(userId) {
        if (!this.ALLOWED_USER_IDS.includes(userId)) {
            this.ALLOWED_USER_IDS.push(userId);
            console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö`);
            console.log('–¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫:', this.ALLOWED_USER_IDS);
            return true;
        } else {
            console.log(`‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} —É–∂–µ –≤ —Å–ø–∏—Å–∫–µ`);
            return false;
        }
    },

    // –ú–µ—Ç–æ–¥ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    removeUser: function(userId) {
        const index = this.ALLOWED_USER_IDS.indexOf(userId);
        if (index > -1) {
            this.ALLOWED_USER_IDS.splice(index, 1);
            console.log(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞`);
            console.log('–¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫:', this.ALLOWED_USER_IDS);
            return true;
        } else {
            console.log(`‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ`);
            return false;
        }
    }
};
