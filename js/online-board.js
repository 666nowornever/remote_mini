// –û–Ω–ª–∞–π–Ω —Ç–∞–±–ª–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
const OnlineBoardManager = {
    iframe: null,
    isAuthenticated: false,
    loginUrl: 'https://p.tomato-pizza.ru/index/Account/Login?ReturnUrl=%2Findex%2F',
    boardUrl: 'https://dashboard.tomato-pizza.ru/',
    
    init() {
        console.log('üîÑ OnlineBoardManager: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è');
        this.iframe = document.querySelector('.online-board-frame');
        this.checkExistingSession();
    },
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å–µ—Å—Å–∏–∏
    checkExistingSession() {
        const savedSession = localStorage.getItem('boardSession');
        if (savedSession) {
            this.isAuthenticated = true;
            this.showBoard();
        } else {
            this.showLoginForm();
        }
    },
    
    // –ü–æ–∫–∞–∑–∞—Ç—å —Ñ–æ—Ä–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    showLoginForm() {
        document.getElementById('loginForm').classList.remove('hidden');
        document.getElementById('boardContainer').classList.add('hidden');
        document.getElementById('boardControls').classList.add('hidden');
        this.isAuthenticated = false;
    },
    
    // –ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–æ
    showBoard() {
        document.getElementById('loginForm').classList.add('hidden');
        document.getElementById('boardContainer').classList.remove('hidden');
        document.getElementById('boardControls').classList.remove('hidden');
        this.isAuthenticated = true;
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–∞–±–ª–æ –ø–æ—Å–ª–µ –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏
        setTimeout(() => {
            this.loadBoard();
        }, 500);
    },
    
    // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    async login() {
        const loginDialog = DialogService.showLoading('–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—Ö–æ–¥ –≤ —Ç–∞–±–ª–æ...');
        
        try {
            // –°–æ–∑–¥–∞–µ–º —Å–∫—Ä—ã—Ç—ã–π iframe –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            await this.performLogin();
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é
            localStorage.setItem('boardSession', 'authenticated');
            localStorage.setItem('boardSessionTime', Date.now().toString());
            
            this.showBoard();
            loginDialog.close();
            DialogService.showMessage('‚úÖ –£—Å–ø–µ—Ö', '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ', 'success');
            
        } catch (error) {
            loginDialog.close();
            DialogService.showMessage('‚ùå –û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Ö–æ–¥ –≤ —Ç–∞–±–ª–æ', 'error');
            console.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
        }
    },
    
    // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ —Å–∫—Ä—ã—Ç—ã–π iframe
    performLogin() {
        return new Promise((resolve, reject) => {
            const authFrame = document.createElement('iframe');
            authFrame.style.display = 'none';
            authFrame.src = this.loginUrl;
            
            authFrame.onload = () => {
                console.log('üîê Iframe –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω');
                
                // –î–∞–µ–º –≤—Ä–µ–º—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ä–º—ã
                setTimeout(() => {
                    try {
                        // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                        const frameDoc = authFrame.contentDocument || authFrame.contentWindow.document;
                        const usernameInput = frameDoc.querySelector('input[name="username"], input[type="text"], #username');
                        const passwordInput = frameDoc.querySelector('input[name="password"], input[type="password"], #password');
                        const submitButton = frameDoc.querySelector('input[type="submit"], button[type="submit"], .btn-login');
                        
                        if (usernameInput && passwordInput && submitButton) {
                            usernameInput.value = 'kremnevav';
                            passwordInput.value = 'drewhix1994';
                            submitButton.click();
                            
                            // –ñ–¥–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                            setTimeout(() => {
                                document.body.removeChild(authFrame);
                                resolve();
                            }, 2000);
                        } else {
                            document.body.removeChild(authFrame);
                            reject(new Error('–§–æ—Ä–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'));
                        }
                    } catch (error) {
                        document.body.removeChild(authFrame);
                        reject(error);
                    }
                }, 1000);
            };
            
            authFrame.onerror = () => {
                document.body.removeChild(authFrame);
                reject(new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏'));
            };
            
            document.body.appendChild(authFrame);
        });
    },
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–∞–±–ª–æ
    loadBoard() {
        if (this.iframe) {
            this.iframe.src = this.boardUrl;
            console.log('üìä –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–Ω–ª–∞–π–Ω —Ç–∞–±–ª–æ...');
        }
    },
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–æ
    refreshBoard() {
        if (this.iframe && this.isAuthenticated) {
            const currentSrc = this.iframe.src;
            this.iframe.src = '';
            setTimeout(() => {
                this.iframe.src = currentSrc;
            }, 100);
            
            DialogService.showMessage('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ', '–¢–∞–±–ª–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è...', 'info');
        }
    },
    
    // –ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º
    toggleFullscreen() {
        if (!this.iframe || !this.isAuthenticated) return;
        
        if (!document.fullscreenElement) {
            if (this.iframe.requestFullscreen) {
                this.iframe.requestFullscreen();
            } else if (this.iframe.webkitRequestFullscreen) {
                this.iframe.webkitRequestFullscreen();
            } else if (this.iframe.msRequestFullscreen) {
                this.iframe.msRequestFullscreen();
            }
        } else {
            if (document.exitFullscreen) {
                document.exitFullscreen();
            } else if (document.webkitExitFullscreen) {
                document.webkitExitFullscreen();
            } else if (document.msExitFullscreen) {
                document.msExitFullscreen();
            }
        }
    },
    
    // –í—ã—Ö–æ–¥
    logout() {
        localStorage.removeItem('boardSession');
        localStorage.removeItem('boardSessionTime');
        this.isAuthenticated = false;
        this.showLoginForm();
        
        // –û—á–∏—â–∞–µ–º iframe
        if (this.iframe) {
            this.iframe.src = 'about:blank';
        }
        
        DialogService.showMessage('üëã –í—ã—Ö–æ–¥', '–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ç–∞–±–ª–æ', 'info');
    },
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è —Å–µ—Å—Å–∏–∏ (24 —á–∞—Å–∞)
    checkSessionExpiry() {
        const sessionTime = localStorage.getItem('boardSessionTime');
        if (sessionTime) {
            const sessionAge = Date.now() - parseInt(sessionTime);
            const twentyFourHours = 24 * 60 * 60 * 1000;
            
            if (sessionAge > twentyFourHours) {
                this.logout();
                return false;
            }
        }
        return true;
    }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', function() {
    if (typeof OnlineBoardManager !== 'undefined' && OnlineBoardManager.init) {
        OnlineBoardManager.init();
    }
});